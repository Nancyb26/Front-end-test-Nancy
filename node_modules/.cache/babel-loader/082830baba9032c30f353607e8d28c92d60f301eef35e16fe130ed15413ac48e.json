{"ast":null,"code":"var _jsxFileName = \"/Users/nancy/Documents/Front-end-test-Nancy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SensorTable from \"./components/SensorTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [sortBy, setSortBy] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [filterBy, setFilterBy] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/data/sensor_readings.json\").then(response => response.json()).then(data => {\n      setSensorData(data);\n      setOriginalData(data);\n    }).catch(error => console.error(\"Failed to fetch data\", error));\n  }, []);\n  const handleSort = key => {\n    const order = sortBy === key && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    const sortedData = [...sensorData].sort((a, b) => {\n      if (key === \"time\") {\n        return order === \"asc\" ? new Date(a.reading_ts) - new Date(b.reading_ts) : new Date(b.reading_ts) - new Date(a.reading_ts);\n      } else if (key === \"sensor_type\") {\n        const comparison = a.name.trim().localeCompare(b.name.trim());\n        return order === \"asc\" ? comparison : -comparison;\n      }\n      return 0;\n    });\n    setSortBy(key);\n    setSortOrder(order);\n    setSensorData(sortedData);\n  };\n  const handleFilter = sensorType => {\n    setFilterBy(sensorType);\n    const filteredData = sensorType ? originalData.filter(entry => entry.sensor_type === sensorType) : originalData;\n    setSensorData(filteredData);\n  };\n  const handleNewSensor = newSensor => {\n    setSensorData(prevData => [...prevData, newSensor]);\n    setOriginalData(prevData => [...prevData, newSensor]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SensorTable, {\n      data: sensorData,\n      onSort: handleSort,\n      onNewSensor: handleNewSensor,\n      filterBy: filterBy,\n      sortBy: sortBy,\n      sortOrder: sortOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/qdTy1v25Bq+2/+rVtXSYZQT9YQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SensorTable","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","originalData","setOriginalData","sortBy","setSortBy","sortOrder","setSortOrder","filterBy","setFilterBy","fetch","then","response","json","data","catch","error","console","handleSort","key","order","sortedData","sort","a","b","Date","reading_ts","comparison","name","trim","localeCompare","handleFilter","sensorType","filteredData","filter","entry","sensor_type","handleNewSensor","newSensor","prevData","children","onSort","onNewSensor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nancy/Documents/Front-end-test-Nancy/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport SensorTable from \"./components/SensorTable\";\n\nconst App = () => {\n  const [sensorData, setSensorData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [sortBy, setSortBy] = useState(\"\"); \n  const [sortOrder, setSortOrder] = useState(\"asc\"); \n  const [filterBy, setFilterBy] = useState(\"\"); \n\n  useEffect(() => {\n    fetch(\"/data/sensor_readings.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setSensorData(data);\n        setOriginalData(data); \n      })\n      .catch((error) => console.error(\"Failed to fetch data\", error));\n  }, []);\n\n  const handleSort = (key) => {\n    const order = sortBy === key && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n\n    const sortedData = [...sensorData].sort((a, b) => {\n      if (key === \"time\") {\n        return order === \"asc\"\n          ? new Date(a.reading_ts) - new Date(b.reading_ts)\n          : new Date(b.reading_ts) - new Date(a.reading_ts);\n      } else if (key === \"sensor_type\") {\n        const comparison = a.name.trim().localeCompare(b.name.trim());\n        return order === \"asc\" ? comparison : -comparison;\n      }\n      return 0;\n    });\n\n    setSortBy(key); \n    setSortOrder(order); \n    setSensorData(sortedData); \n  };\n\n  const handleFilter = (sensorType) => {\n    setFilterBy(sensorType);\n    const filteredData = sensorType\n      ? originalData.filter((entry) => entry.sensor_type === sensorType)\n      : originalData;\n    setSensorData(filteredData); \n  };\n\n  const handleNewSensor = (newSensor) => {\n    setSensorData((prevData) => [...prevData, newSensor]);\n    setOriginalData((prevData) => [...prevData, newSensor]);\n  };\n\n  return (\n    <div>\n      <SensorTable\n        data={sensorData}\n        onSort={handleSort}\n        onNewSensor={handleNewSensor} \n        filterBy={filterBy}\n        sortBy={sortBy}\n        sortOrder={sortOrder}\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}